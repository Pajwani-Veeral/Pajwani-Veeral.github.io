{"version":3,"file":"component---src-pages-contact-tsx-785da1dbf05311815bb6.js","mappings":"iNAGe,SAASA,EAAc,GAAyB,IAAzB,GAAEC,GAAoB,EAC1D,MAAM,QAAEC,IAAYC,EAAAA,EAAAA,IAAiBF,GAErC,OACEG,EAAAA,cAAAA,EAAAA,SAAAA,KACGF,EAAQG,KAAKC,GACZF,EAAAA,cAAAA,QAAAA,CAAOG,IAAKD,EAAEL,GAAIO,QAASF,EAAEL,GAAIQ,UAAU,cACzCL,EAAAA,cAAAA,QAAAA,OAAAA,OAAAA,CACEM,KAAK,WACLT,GAAIK,EAAEL,IACFK,EAAEK,iBAAgB,CACtBF,UAAU,UAEXH,EAAEM,SAKb,CC2CA,MAzDoB,KAClB,MAAMC,GAAUC,EAAAA,EAAAA,IAAc,CAAEC,KAAMA,IAQtC,OACEX,EAAAA,cAACY,EAAAA,GAAuBH,EACtBT,EAAAA,cAAAA,OAAAA,CAAMa,SAAUJ,EAAQK,cARXC,UACfC,QAAQC,IAAI,uBAAwBC,SAC9BT,EAAQU,oBAAoBD,GAClCE,OAAOC,SAASC,KAAO,YAAY,IAKeC,aAAa,OAC3DvB,EAAAA,cAAAA,MAAAA,CACEK,UAAU,sDACVR,GAAG,YAEHG,EAAAA,cAAAA,KAAAA,CAAIK,UAAU,YAAU,cACxBL,EAAAA,cAAAA,MAAAA,CAAKK,UAAU,UACfL,EAAAA,cAAAA,OAAAA,CAAMK,UAAU,cAAY,aAC5BL,EAAAA,cAACwB,EAAAA,EAAgB,CACf3B,GAAG,aACH4B,UAAU,EACVnB,KAAK,OACLD,UAAU,qCAEZL,EAAAA,cAAAA,MAAAA,CAAKK,UAAU,SACfL,EAAAA,cAAAA,OAAAA,CAAMK,UAAU,cAAY,SAC5BL,EAAAA,cAACwB,EAAAA,EAAgB,CACf3B,GAAG,aACH4B,UAAU,EACVnB,KAAK,QACLD,UAAU,qCAEZL,EAAAA,cAAAA,MAAAA,CAAKK,UAAU,SACfL,EAAAA,cAAAA,OAAAA,CAAMK,UAAU,cAAY,WAC5BL,EAAAA,cAAC0B,EAAAA,EAAe,CACd7B,GAAG,aACH4B,UAAU,EACVE,KAAM,EACNtB,UAAU,qCAEZL,EAAAA,cAAAA,MAAAA,CAAKK,UAAU,SACfL,EAAAA,cAAAA,OAAAA,CAAMK,UAAU,cAAY,eAC5BL,EAAAA,cAACJ,EAAa,CAACC,GAAG,cAClBG,EAAAA,cAAAA,MAAAA,CAAKK,UAAU,UACfL,EAAAA,cAAAA,SAAAA,CACEM,KAAK,SACLD,UAAU,kDAAgD,YAM7C,C,qJCjBzB,UA9B0CuB,IACxC,MACMC,EADOD,EAAMV,KACUW,iBAEbnB,EAAAA,EAAAA,IAAc,CAAEC,KAAMA,IAQtC,OACEX,EAAAA,cAAAA,OAAAA,KACEA,EAAAA,cAAAA,MAAAA,CAAKK,UAAU,YACbL,EAAAA,cAAC8B,EAAAA,EAAG,CACFC,MAAOF,EAAgBG,gBAAgBD,MACvCE,IAAKJ,EAAgBK,KACrB7B,UAAU,gEAEZL,EAAAA,cAAAA,MAAAA,CAAKK,UAAU,mBACbL,EAAAA,cAACmC,EAAAA,EAAM,OAETnC,EAAAA,cAACoC,EAAAA,EAAW,OAEdpC,EAAAA,cAACqC,EAAAA,EAAM,MACF,EAMJ,MAAMC,EAAO,IAAMtC,EAAAA,cAACuC,EAAAA,EAAG,CAACC,MAAK,0B","sources":["webpack://vptronics-website/./src/components/CheckBoxInput.tsx","webpack://vptronics-website/./src/components/ContactForm.tsx","webpack://vptronics-website/./src/pages/contact.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { useCheckboxInput } from \"react-google-forms-hooks\";\r\n\r\nexport default function CheckboxInput({ id }: { id: string }) {\r\n  const { options } = useCheckboxInput(id);\r\n\r\n  return (\r\n    <>\r\n      {options.map((o) => (\r\n        <label key={o.id} htmlFor={o.id} className=\"block pt-2\">\r\n          <input\r\n            type=\"checkbox\"\r\n            id={o.id}\r\n            {...o.registerOption()}\r\n            className=\"mr-3\"\r\n          />\r\n          {o.label}\r\n        </label>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport { GoogleFormProvider, useGoogleForm } from \"react-google-forms-hooks\";\r\nimport form from \"../form.json\";\r\nimport ShortAnswerInput from \"../components/ShortAnswerInput\";\r\nimport LongAnswerInput from \"../components/LongAnswer\";\r\nimport CheckboxInput from \"../components/CheckBoxInput\";\r\n\r\nconst ContactForm = () => {\r\n  const methods = useGoogleForm({ form: form as any });\r\n\r\n  const onSubmit = async (data: any) => {\r\n    console.log(\">>> Here is the data\", data);\r\n    await methods.submitToGoogleForms(data);\r\n    window.location.href = \"/thank-you\";\r\n  };\r\n\r\n  return (\r\n    <GoogleFormProvider {...methods}>\r\n      <form onSubmit={methods.handleSubmit(onSubmit)} autoComplete=\"off\">\r\n        <div\r\n          className=\"py-16 bg-white text-[#262A2D] container select-none\"\r\n          id=\"services\"\r\n        >\r\n          <h2 className=\"text-2xl\">Contact Us</h2>\r\n          <div className=\"mb-10\"></div>\r\n          <span className=\"block mb-3\">Full Name</span>\r\n          <ShortAnswerInput\r\n            id=\"1862994178\"\r\n            required={true}\r\n            type=\"text\"\r\n            className=\"border p-3 w-full lg:max-w-[50%]\"\r\n          />\r\n          <div className=\"mb-4\"></div>\r\n          <span className=\"block mb-3\">Email</span>\r\n          <ShortAnswerInput\r\n            id=\"1056499612\"\r\n            required={true}\r\n            type=\"email\"\r\n            className=\"border p-3 w-full lg:max-w-[50%]\"\r\n          />\r\n          <div className=\"mb-4\"></div>\r\n          <span className=\"block mb-3\">Message</span>\r\n          <LongAnswerInput\r\n            id=\"1165880350\"\r\n            required={true}\r\n            rows={4}\r\n            className=\"border p-3 w-full lg:max-w-[50%]\"\r\n          />\r\n          <div className=\"mb-4\"></div>\r\n          <span className=\"block mb-3\">Enquire for</span>\r\n          <CheckboxInput id=\"658164691\" />\r\n          <div className=\"mb-10\"></div>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"bg-[#262A2D] text-white px-6 py-2 rounded-full\"\r\n          >\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </GoogleFormProvider>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","import * as React from \"react\";\r\nimport { graphql, PageProps } from \"gatsby\";\r\nimport Img from \"gatsby-image\";\r\nimport { GoogleFormProvider, useGoogleForm } from \"react-google-forms-hooks\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport Footer from \"../components/Footer\";\r\nimport form from \"../form.json\";\r\nimport ShortAnswerInput from \"../components/ShortAnswerInput\";\r\nimport LongAnswerInput from \"../components/LongAnswer\";\r\nimport CheckboxInput from \"../components/CheckBoxInput\";\r\nimport { SEO } from \"../components/SEO\";\r\nimport ContactForm from \"../components/ContactForm\";\r\n\r\nconst ContactPage: React.FC<PageProps> = (props) => {\r\n  const data = props.data as any;\r\n  const backgroundImage = data.backgroundImage;\r\n\r\n  const methods = useGoogleForm({ form: form as any });\r\n\r\n  const onSubmit = async (data: any) => {\r\n    console.log(\">>> Here is the data\", data);\r\n    await methods.submitToGoogleForms(data);\r\n    window.location.href = \"/thank-you\";\r\n  };\r\n\r\n  return (\r\n    <main>\r\n      <div className=\"relative\">\r\n        <Img\r\n          fluid={backgroundImage.childImageSharp.fluid}\r\n          alt={backgroundImage.name}\r\n          className=\"!absolute z-[-1] w-full h-full !object-cover !object-center\"\r\n        />\r\n        <div className=\"blur-background\">\r\n          <Navbar />\r\n        </div>\r\n        <ContactForm />\r\n      </div>\r\n      <Footer />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default ContactPage;\r\n\r\nexport const Head = () => <SEO title={`Contact Us | VPTronics`} />;\r\n\r\nexport const query = graphql`\r\n  query {\r\n    backgroundImage: file(relativePath: { eq: \"solar-farm.jpg\" }) {\r\n      name\r\n      childImageSharp {\r\n        fluid {\r\n          ...GatsbyImageSharpFluid\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"names":["CheckboxInput","id","options","useCheckboxInput","React","map","o","key","htmlFor","className","type","registerOption","label","methods","useGoogleForm","form","GoogleFormProvider","onSubmit","handleSubmit","async","console","log","data","submitToGoogleForms","window","location","href","autoComplete","ShortAnswerInput","required","LongAnswerInput","rows","props","backgroundImage","Img","fluid","childImageSharp","alt","name","Navbar","ContactForm","Footer","Head","SEO","title"],"sourceRoot":""}